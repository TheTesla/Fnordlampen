
FnordLampen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000001e6  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  0000025c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000009bf  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000009ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000012e  00000000  00000000  00000a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000076  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000278  00000000  00000000  00000bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00000e2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005c25  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000047  00000000  00000000  00006a85  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00006acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002848  00000000  00000000  00006adc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  9c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <main>:


#include <avr/io.h>

int main(void)
{
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
  ac:	a6 97       	sbiw	r28, 0x26	; 38
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	cd bf       	out	0x3d, r28	; 61
	uint32_t x,xs,i,rot,gruen,blau;
	uint16_t led;
	float r,g,b;
	DDRB = 255;
  b8:	84 e2       	ldi	r24, 0x24	; 36
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	fc 01       	movw	r30, r24
  c0:	20 83       	st	Z, r18
	DDRD = 255;
  c2:	8a e2       	ldi	r24, 0x2A	; 42
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	fc 01       	movw	r30, r24
  ca:	20 83       	st	Z, r18
	xs = 1 + (1 << 3) + (1 << 6) + (1 << 9);
  cc:	89 e4       	ldi	r24, 0x49	; 73
  ce:	92 e0       	ldi	r25, 0x02	; 2
  d0:	a0 e0       	ldi	r26, 0x00	; 0
  d2:	b0 e0       	ldi	r27, 0x00	; 0
  d4:	89 87       	std	Y+9, r24	; 0x09
  d6:	9a 87       	std	Y+10, r25	; 0x0a
  d8:	ab 87       	std	Y+11, r26	; 0x0b
  da:	bc 87       	std	Y+12, r27	; 0x0c
    x = xs;
  dc:	89 85       	ldd	r24, Y+9	; 0x09
  de:	9a 85       	ldd	r25, Y+10	; 0x0a
  e0:	ab 85       	ldd	r26, Y+11	; 0x0b
  e2:	bc 85       	ldd	r27, Y+12	; 0x0c
  e4:	89 83       	std	Y+1, r24	; 0x01
  e6:	9a 83       	std	Y+2, r25	; 0x02
  e8:	ab 83       	std	Y+3, r26	; 0x03
  ea:	bc 83       	std	Y+4, r27	; 0x04
	
	rot = 900;
  ec:	84 e8       	ldi	r24, 0x84	; 132
  ee:	93 e0       	ldi	r25, 0x03	; 3
  f0:	a0 e0       	ldi	r26, 0x00	; 0
  f2:	b0 e0       	ldi	r27, 0x00	; 0
  f4:	8d 87       	std	Y+13, r24	; 0x0d
  f6:	9e 87       	std	Y+14, r25	; 0x0e
  f8:	af 87       	std	Y+15, r26	; 0x0f
  fa:	b8 8b       	std	Y+16, r27	; 0x10
	gruen = 900;
  fc:	84 e8       	ldi	r24, 0x84	; 132
  fe:	93 e0       	ldi	r25, 0x03	; 3
 100:	a0 e0       	ldi	r26, 0x00	; 0
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	89 8b       	std	Y+17, r24	; 0x11
 106:	9a 8b       	std	Y+18, r25	; 0x12
 108:	ab 8b       	std	Y+19, r26	; 0x13
 10a:	bc 8b       	std	Y+20, r27	; 0x14
	blau = 900;
 10c:	84 e8       	ldi	r24, 0x84	; 132
 10e:	93 e0       	ldi	r25, 0x03	; 3
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	8d 8b       	std	Y+21, r24	; 0x15
 116:	9e 8b       	std	Y+22, r25	; 0x16
 118:	af 8b       	std	Y+23, r26	; 0x17
 11a:	b8 8f       	std	Y+24, r27	; 0x18
	b = 0;
 11c:	19 8e       	std	Y+25, r1	; 0x19
 11e:	1a 8e       	std	Y+26, r1	; 0x1a
 120:	1b 8e       	std	Y+27, r1	; 0x1b
 122:	1c 8e       	std	Y+28, r1	; 0x1c
	r = 1;
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	a0 e8       	ldi	r26, 0x80	; 128
 12a:	bf e3       	ldi	r27, 0x3F	; 63
 12c:	8d 8f       	std	Y+29, r24	; 0x1d
 12e:	9e 8f       	std	Y+30, r25	; 0x1e
 130:	af 8f       	std	Y+31, r26	; 0x1f
 132:	b8 a3       	std	Y+32, r27	; 0x20
	g = 0;
 134:	19 a2       	std	Y+33, r1	; 0x21
 136:	1a a2       	std	Y+34, r1	; 0x22
 138:	1b a2       	std	Y+35, r1	; 0x23
 13a:	1c a2       	std	Y+36, r1	; 0x24
	
	
	i= 0;
 13c:	1d 82       	std	Y+5, r1	; 0x05
 13e:	1e 82       	std	Y+6, r1	; 0x06
 140:	1f 82       	std	Y+7, r1	; 0x07
 142:	18 86       	std	Y+8, r1	; 0x08
	x=0;
 144:	19 82       	std	Y+1, r1	; 0x01
 146:	1a 82       	std	Y+2, r1	; 0x02
 148:	1b 82       	std	Y+3, r1	; 0x03
 14a:	1c 82       	std	Y+4, r1	; 0x04
	while(1){
		x++;
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 14e:	9a 81       	ldd	r25, Y+2	; 0x02
 150:	ab 81       	ldd	r26, Y+3	; 0x03
 152:	bc 81       	ldd	r27, Y+4	; 0x04
 154:	01 96       	adiw	r24, 0x01	; 1
 156:	a1 1d       	adc	r26, r1
 158:	b1 1d       	adc	r27, r1
 15a:	89 83       	std	Y+1, r24	; 0x01
 15c:	9a 83       	std	Y+2, r25	; 0x02
 15e:	ab 83       	std	Y+3, r26	; 0x03
 160:	bc 83       	std	Y+4, r27	; 0x04
		if(x==12){
 162:	89 81       	ldd	r24, Y+1	; 0x01
 164:	9a 81       	ldd	r25, Y+2	; 0x02
 166:	ab 81       	ldd	r26, Y+3	; 0x03
 168:	bc 81       	ldd	r27, Y+4	; 0x04
 16a:	8c 30       	cpi	r24, 0x0C	; 12
 16c:	91 05       	cpc	r25, r1
 16e:	a1 05       	cpc	r26, r1
 170:	b1 05       	cpc	r27, r1
 172:	79 f4       	brne	.+30     	; 0x192 <main+0xee>
			x=0;
 174:	19 82       	std	Y+1, r1	; 0x01
 176:	1a 82       	std	Y+2, r1	; 0x02
 178:	1b 82       	std	Y+3, r1	; 0x03
 17a:	1c 82       	std	Y+4, r1	; 0x04
			i++;
 17c:	8d 81       	ldd	r24, Y+5	; 0x05
 17e:	9e 81       	ldd	r25, Y+6	; 0x06
 180:	af 81       	ldd	r26, Y+7	; 0x07
 182:	b8 85       	ldd	r27, Y+8	; 0x08
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	a1 1d       	adc	r26, r1
 188:	b1 1d       	adc	r27, r1
 18a:	8d 83       	std	Y+5, r24	; 0x05
 18c:	9e 83       	std	Y+6, r25	; 0x06
 18e:	af 83       	std	Y+7, r26	; 0x07
 190:	b8 87       	std	Y+8, r27	; 0x08
		}
		if(i==16)i=0;
 192:	8d 81       	ldd	r24, Y+5	; 0x05
 194:	9e 81       	ldd	r25, Y+6	; 0x06
 196:	af 81       	ldd	r26, Y+7	; 0x07
 198:	b8 85       	ldd	r27, Y+8	; 0x08
 19a:	80 31       	cpi	r24, 0x10	; 16
 19c:	91 05       	cpc	r25, r1
 19e:	a1 05       	cpc	r26, r1
 1a0:	b1 05       	cpc	r27, r1
 1a2:	21 f4       	brne	.+8      	; 0x1ac <main+0x108>
 1a4:	1d 82       	std	Y+5, r1	; 0x05
 1a6:	1e 82       	std	Y+6, r1	; 0x06
 1a8:	1f 82       	std	Y+7, r1	; 0x07
 1aa:	18 86       	std	Y+8, r1	; 0x08
		led = 1<<i;
 1ac:	2d 81       	ldd	r18, Y+5	; 0x05
 1ae:	3e 81       	ldd	r19, Y+6	; 0x06
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <main+0x116>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	2a 95       	dec	r18
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <main+0x112>
 1be:	9e a3       	std	Y+38, r25	; 0x26
 1c0:	8d a3       	std	Y+37, r24	; 0x25
		PORTB = ~(led);
 1c2:	85 e2       	ldi	r24, 0x25	; 37
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	2d a1       	ldd	r18, Y+37	; 0x25
 1c8:	20 95       	com	r18
 1ca:	fc 01       	movw	r30, r24
 1cc:	20 83       	st	Z, r18
		PORTD = ~(led>>8);
 1ce:	8b e2       	ldi	r24, 0x2B	; 43
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	2d a1       	ldd	r18, Y+37	; 0x25
 1d4:	3e a1       	ldd	r19, Y+38	; 0x26
 1d6:	23 2f       	mov	r18, r19
 1d8:	33 27       	eor	r19, r19
 1da:	20 95       	com	r18
 1dc:	fc 01       	movw	r30, r24
 1de:	20 83       	st	Z, r18
		
		
		
	}
 1e0:	b5 cf       	rjmp	.-150    	; 0x14c <main+0xa8>

000001e2 <_exit>:
 1e2:	f8 94       	cli

000001e4 <__stop_program>:
 1e4:	ff cf       	rjmp	.-2      	; 0x1e4 <__stop_program>
